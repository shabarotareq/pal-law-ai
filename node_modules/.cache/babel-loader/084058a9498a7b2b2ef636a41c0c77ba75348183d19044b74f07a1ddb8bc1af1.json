{"ast":null,"code":"import { useState as T, useRef as p, useEffect as u, useMemo as M } from \"react\";\nfunction g(n, t) {\n  let o;\n  return (...i) => {\n    window.clearTimeout(o), o = window.setTimeout(() => n(...i), t);\n  };\n}\nfunction j({\n  debounce: n,\n  scroll: t,\n  polyfill: o,\n  offsetSize: i\n} = {\n  debounce: 0,\n  scroll: !1,\n  offsetSize: !1\n}) {\n  const a = o || (typeof window == \"undefined\" ? class {} : window.ResizeObserver);\n  if (!a) throw new Error(\"This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills\");\n  const [c, h] = T({\n      left: 0,\n      top: 0,\n      width: 0,\n      height: 0,\n      bottom: 0,\n      right: 0,\n      x: 0,\n      y: 0\n    }),\n    e = p({\n      element: null,\n      scrollContainers: null,\n      resizeObserver: null,\n      lastBounds: c,\n      orientationHandler: null\n    }),\n    d = n ? typeof n == \"number\" ? n : n.scroll : null,\n    f = n ? typeof n == \"number\" ? n : n.resize : null,\n    w = p(!1);\n  u(() => (w.current = !0, () => void (w.current = !1)));\n  const [z, m, s] = M(() => {\n    const r = () => {\n      if (!e.current.element) return;\n      const {\n          left: y,\n          top: C,\n          width: H,\n          height: O,\n          bottom: S,\n          right: x,\n          x: B,\n          y: R\n        } = e.current.element.getBoundingClientRect(),\n        l = {\n          left: y,\n          top: C,\n          width: H,\n          height: O,\n          bottom: S,\n          right: x,\n          x: B,\n          y: R\n        };\n      e.current.element instanceof HTMLElement && i && (l.height = e.current.element.offsetHeight, l.width = e.current.element.offsetWidth), Object.freeze(l), w.current && !D(e.current.lastBounds, l) && h(e.current.lastBounds = l);\n    };\n    return [r, f ? g(r, f) : r, d ? g(r, d) : r];\n  }, [h, i, d, f]);\n  function v() {\n    e.current.scrollContainers && (e.current.scrollContainers.forEach(r => r.removeEventListener(\"scroll\", s, !0)), e.current.scrollContainers = null), e.current.resizeObserver && (e.current.resizeObserver.disconnect(), e.current.resizeObserver = null), e.current.orientationHandler && (\"orientation\" in screen && \"removeEventListener\" in screen.orientation ? screen.orientation.removeEventListener(\"change\", e.current.orientationHandler) : \"onorientationchange\" in window && window.removeEventListener(\"orientationchange\", e.current.orientationHandler));\n  }\n  function b() {\n    e.current.element && (e.current.resizeObserver = new a(s), e.current.resizeObserver.observe(e.current.element), t && e.current.scrollContainers && e.current.scrollContainers.forEach(r => r.addEventListener(\"scroll\", s, {\n      capture: !0,\n      passive: !0\n    })), e.current.orientationHandler = () => {\n      s();\n    }, \"orientation\" in screen && \"addEventListener\" in screen.orientation ? screen.orientation.addEventListener(\"change\", e.current.orientationHandler) : \"onorientationchange\" in window && window.addEventListener(\"orientationchange\", e.current.orientationHandler));\n  }\n  const L = r => {\n    !r || r === e.current.element || (v(), e.current.element = r, e.current.scrollContainers = E(r), b());\n  };\n  return X(s, !!t), W(m), u(() => {\n    v(), b();\n  }, [t, s, m]), u(() => v, []), [L, c, z];\n}\nfunction W(n) {\n  u(() => {\n    const t = n;\n    return window.addEventListener(\"resize\", t), () => void window.removeEventListener(\"resize\", t);\n  }, [n]);\n}\nfunction X(n, t) {\n  u(() => {\n    if (t) {\n      const o = n;\n      return window.addEventListener(\"scroll\", o, {\n        capture: !0,\n        passive: !0\n      }), () => void window.removeEventListener(\"scroll\", o, !0);\n    }\n  }, [n, t]);\n}\nfunction E(n) {\n  const t = [];\n  if (!n || n === document.body) return t;\n  const {\n    overflow: o,\n    overflowX: i,\n    overflowY: a\n  } = window.getComputedStyle(n);\n  return [o, i, a].some(c => c === \"auto\" || c === \"scroll\") && t.push(n), [...t, ...E(n.parentElement)];\n}\nconst k = [\"x\", \"y\", \"top\", \"bottom\", \"left\", \"right\", \"width\", \"height\"],\n  D = (n, t) => k.every(o => n[o] === t[o]);\nexport { j as default };\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}