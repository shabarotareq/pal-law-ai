{"ast":null,"code":"const RGBShiftShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    amount: {\n      value: 5e-3\n    },\n    angle: {\n      value: 0\n    }\n  },\n  vertexShader: (/* glsl */\n  `\n    varying vec2 vUv;\n\n    void main() {\n\n    \tvUv = uv;\n    \tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n    }\n  `),\n  fragmentShader: (/* glsl */\n  `\n    uniform sampler2D tDiffuse;\n    uniform float amount;\n    uniform float angle;\n\n    varying vec2 vUv;\n\n    void main() {\n\n    \tvec2 offset = amount * vec2( cos(angle), sin(angle));\n    \tvec4 cr = texture2D(tDiffuse, vUv + offset);\n    \tvec4 cga = texture2D(tDiffuse, vUv);\n    \tvec4 cb = texture2D(tDiffuse, vUv - offset);\n    \tgl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\n\n    }\n  `)\n};\nexport { RGBShiftShader };\n//# sourceMappingURL=RGBShiftShader.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}