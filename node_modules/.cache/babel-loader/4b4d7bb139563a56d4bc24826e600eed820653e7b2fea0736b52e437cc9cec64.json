{"ast":null,"code":"const PixelShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    resolution: {\n      value: null\n    },\n    pixelSize: {\n      value: 1\n    }\n  },\n  vertexShader: (/* glsl */\n  `\n    varying highp vec2 vUv;\n\n    void main() {\n\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n    }\n  `),\n  fragmentShader: (/* glsl */\n  `\n    uniform sampler2D tDiffuse;\n    uniform float pixelSize;\n    uniform vec2 resolution;\n\n    varying highp vec2 vUv;\n\n    void main(){\n\n      vec2 dxy = pixelSize / resolution;\n      vec2 coord = dxy * floor( vUv / dxy );\n      gl_FragColor = texture2D(tDiffuse, coord);\n\n    }\n  `)\n};\nexport { PixelShader };\n//# sourceMappingURL=PixelShader.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}